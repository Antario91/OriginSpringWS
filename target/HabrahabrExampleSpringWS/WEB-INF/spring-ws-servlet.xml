<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.example."/>

    <sws:annotation-driven/>


    <bean id="HelloService" class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition" lazy-init="true">
        <property name="schemaCollection">
            <bean class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
                <property name="inline" value="true" />
                <property name="xsds">
                    <list>
                        <value>/WEB-INF/HelloService.xsd</value>
                        <value>/WEB-INF/GreetingService.xsd</value>
                    </list>
                </property>
            </bean>
        </property>
        <property name="portTypeName" value="HelloService"/>
        <property name="serviceName" value="CustomerWebService" />
        <property name="locationUri" value="/helloService"/>
    </bean>
    <!-- Следующее определение необходимо для динамической генерации WSDL -->


    <!-- Следующее определение Маршалера и анмаршалера. Но если не указывать этот Bean или даже удалить maven зависимость
     Spring-oxm, то все-равно в WEB-INF/lib ложиться чуть другая версия Spring-oxm. Скорее всего она добавляется из-за наличия
      maven зависимости Spring-ws -->
    <bean id="marshallerUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="org.example.helloservice"/>
    </bean>

    <bean id="exceptResolver" class="org.example.Exceptions.EndpointExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="Exception">SERVER</prop>
            </props>
        </property>
        <property name="defaultFault" ref="defaultSoapFaultDefinition" />
        <property name="order" value="1" />
    </bean>

    <bean id="defaultSoapFaultDefinition" class="org.springframework.ws.soap.server.endpoint.SoapFaultDefinition">
        <property name="faultCode" value="faultCodeForDefaultSoapFaultDefinition" />
    </bean>

    <bean id="faultCodeForDefaultSoapFaultDefinition" class="javax.xml.namespace.QName">
        <constructor-arg value="SERVER" />
    </bean>

</beans>

        <!-- Это контекст Spring. Имя ЭТОГО файла захардкодино. Оно состоит из [servlet name(определенное в web.xml)]-servlet.xml.
            Т.е. Если в web.xml имя сервлета "echo", то имя ЭТОГО файла(контекста Spring) - echo-servlet.xml -->